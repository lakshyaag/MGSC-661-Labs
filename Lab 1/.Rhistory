under18 = 10 / 100, # Convert percentages to proportions for the model
density = 175,
black = 45 / 100,
hispanic = 10 / 100
)
predicted_prob_1 <- predict(reg1, newdata = predict_data_1)
print(predicted_prob_1)
predict_data_1 <- data.frame(
pop2014 = 250000,
under18 = 11 / 100, # Convert percentages to proportions for the model
density = 175,
black = 45 / 100,
hispanic = 10 / 100
)
predicted_prob_1 <- predict(reg1, newdata = predict_data_1)
print(predicted_prob_1)
predict_data_1 <- data.frame(
pop2014 = 250000,
under18 = 10 / 100, # Convert percentages to proportions for the model
density = 175,
black = 45 / 100,
hispanic = 10 / 100
)
predicted_prob_1 <- predict(reg1, newdata = predict_data_1)
print(predicted_prob_1)
predict_data_2 <- data.frame(
pop2014 = 1000000,
under18 = 20 / 100, # Convert percentages to proportions for the model
density = 1000,
black = 85 / 100,
hispanic = 5 / 100
)
predicted_prob_2 <- predict(reg1, newdata = predict_data_2)
print(predicted_prob_2)
reg2 <-
glm(
formula = winner_code ~ pop2014 + under18 + density + black + hispanic,
data = election_data,
family = "binomial"
)
summary(reg2)
stargazer(
reg2,
title = "Logistic Regression Results",
type = "html",
align = TRUE,
digits = 2,
dep.var.labels = c("Winner"),
covariate.labels = c(
"Total Population (in 2014)",
"Under 18 Population",
"Population Density",
"Black Population",
"Hispanic Population"
)
)
summary(reg2)
prob_1 <-
data.frame(
pop2014 = 1000000,
under18 = 20 / 100,
density = 1000,
black = 85 / 100,
hispanic = 5 / 100
)
predict(reg2, prob_1, type = "response")
prob_1 <-
data.frame(
pop2014 = 1000000,
under18 = 20 / 100,
density = 1000,
black = 85 / 100,
hispanic = 5 / 100
)
predict(reg2, prob_1)
prob_1 <-
data.frame(
pop2014 = 1000000,
under18 = 20 / 100,
density = 1000,
black = 85 / 100,
hispanic = 5 / 100
)
predict(reg2, prob_1, type = "response")
b0 <- coef(reg2)[1]
b1 <- coef(reg2)[2]
b2 <- coef(reg2)[3]
b3 <- coef(reg2)[4]
b4 <- coef(reg2)[5]
b5 <- coef(reg2)[6]
pop2014_value <- 250000
under18_value <- 25 / 100
density_value <- 100
hispanic_value <- 10 / 100
black_threshold <- -(b0 + b1 * pop2014_value + b2 * under18_value + b3 * density_value + b5 * hispanic_value) / b4
print(black_threshold)
prob_1 <-
data.frame(
pop2014 = 1000000,
under18 = 20 / 100,
density = 1000,
black = 45 / 100,
hispanic = 5 / 100
)
predict(reg2, prob_1, type = "response")
prob_1 <-
data.frame(
pop2014 = 250000,
under18 = 25 / 100,
density = 100,
black = 45 / 100,
hispanic = 10 / 100
)
predict(reg2, prob_1, type = "response")
prob_1 <-
data.frame(
pop2014 = 250000,
under18 = 25 / 100,
density = 100,
black = 44.89 / 100,
hispanic = 10 / 100
)
prob_1 <-
data.frame(
pop2014 = 250000,
under18 = 25 / 100,
density = 100,
black = 44.89 / 100,
hispanic = 10 / 100
)
predict(reg2, prob_1, type = "response")
prob_1 <-
data.frame(
pop2014 = 250000,
under18 = 25 / 100,
density = 100,
black = 40 / 100,
hispanic = 10 / 100
)
predict(reg2, prob_1, type = "response")
prob_1 <-
data.frame(
pop2014 = 250000,
under18 = 25 / 100,
density = 100,
black = 10 / 100,
hispanic = 10 / 100
)
prob_1 <-
data.frame(
pop2014 = 250000,
under18 = 25 / 100,
density = 100,
black = 10 / 100,
hispanic = 10 / 100
)
predict(reg2, prob_1, type = "response")
prob_1 <-
data.frame(
pop2014 = 250000,
under18 = 25 / 100,
density = 100,
black = 60 / 100,
hispanic = 10 / 100
)
predict(reg2, prob_1, type = "response")
prob_1 <-
data.frame(
pop2014 = 1000000,
under18 = 20 / 100,
density = 1000,
black = 85 / 100,
hispanic = 5 / 100
)
predict(reg2, prob_1, type = "response")
p_x(b0, b1, b2, 0.15, 0.20)
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
p_x(b0, b1, b2, 0.15, 0.20)
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
obs_1, obs_2, obs_3, obs_4
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(obs_1, obs_2, obs_3, obs_4)
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(str_c(obs_1, obs_2, obs_3, obs_4))
print(str_c(obs_1, obs_2, obs_3, obs_4, sep = "|"))
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(str_c(obs_1, obs_2, obs_3, obs_4, sep = "|"))
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(c(obs_1, obs_2, obs_3, obs_4))
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(c(obs_1, obs_2, obs_3, obs_4))
likelihood = (obs_1 * obs_3) * ((1 - obs_2) * (1 - obs_4))
likelihood
b0 <- -1
b1 <- 2
b2 <- 4
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(c(obs_1, obs_2, obs_3, obs_4))
likelihood = (obs_1 * obs_3) * ((1 - obs_2) * (1 - obs_4))
likelihood
reg3 <-
glm(
formula = winner_code ~ hispanic + undergrad,
data = election_data,
family = "binomial"
)
summary(reg3)
b0 <- -4.4
b1 <- 3.5
b2 <- -10.7
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(c(obs_1, obs_2, obs_3, obs_4))
likelihood = (obs_1 * obs_3) * ((1 - obs_2) * (1 - obs_4))
likelihood
b0 <- -1
b1 <- 2
b2 <- 4
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(c(obs_1, obs_2, obs_3, obs_4))
likelihood = (obs_1 * obs_3) * ((1 - obs_2) * (1 - obs_4))
likelihood
require(car)
require(ggplot2)
require(bbplot)
require(ggtext)
require(methods)
require(caTools)
require(splines)
require(methods)
require(boot)
require(stargazer)
require(MASS)
require(klaR)
require(scales)
require(glue)
windowsFonts(Helvetica = "Product Sans")
theme_lox <- function() {
theme(
panel.grid.major.x = element_line(size = 0.3, colour = "#cbcbcb"),
panel.grid.major.y = element_line(size = 0.3, colour = "#cbcbcb"),
plot.title = element_markdown(
family = "Helvetica",
size = 22,
face = "bold",
color = "#222222"
),
plot.subtitle = element_text(
family = "Helvetica",
size = 16,
margin = margin(2, 0, 2, 0)
),
plot.caption = element_text(family = "Helvetica", face = "bold"),
axis.text = element_text(
family = "Helvetica",
size = 12,
color = "#222222"
),
axis.title = element_text(
family = "Helvetica",
size = 14,
color = "#222222"
),
legend.text = element_text(family = "Helvetica", size = 12),
legend.title = element_text(
family = "Helvetica",
size = 14,
face = "bold"
),
legend.position = "right",
strip.text = element_text(
family = "Helvetica",
size = 12,
hjust = 0.5
)
)
}
election_data <- read.csv("./election_data.csv")
wine_data <- read.csv("./wine_data.csv")
attach(election_data)
attach(wine_data)
election_data$winner_code <-
as.numeric(election_data$winner == "Trump")
reg1 <-
lm(winner_code ~ pop2014 + under18 + density + black + hispanic, data = election_data)
summary(reg1)
stargazer(
reg1,
title = "Linear Regression Results",
type = "html",
align = TRUE,
digits = 2,
dep.var.labels = c("Winner"),
covariate.labels = c(
"Total Population (in 2014)",
"Under 18 Population",
"Population Density",
"Black Population",
"Hispanic Population"
)
)
predict_data_1 <- data.frame(
pop2014 = 250000,
under18 = 10 / 100, # Convert percentages to proportions for the model
density = 175,
black = 45 / 100,
hispanic = 10 / 100
)
predicted_prob_1 <- predict(reg1, newdata = predict_data_1)
print(predicted_prob_1)
predict_data_2 <- data.frame(
pop2014 = 1000000,
under18 = 20 / 100, # Convert percentages to proportions for the model
density = 1000,
black = 85 / 100,
hispanic = 5 / 100
)
predicted_prob_2 <- predict(reg1, newdata = predict_data_2)
print(predicted_prob_2)
reg2 <-
glm(
formula = winner_code ~ pop2014 + under18 + density + black + hispanic,
data = election_data,
family = "binomial"
)
summary(reg2)
stargazer(
reg2,
title = "Logistic Regression Results",
type = "html",
align = TRUE,
digits = 2,
dep.var.labels = c("Winner"),
covariate.labels = c(
"Total Population (in 2014)",
"Under 18 Population",
"Population Density",
"Black Population",
"Hispanic Population"
)
)
summary(reg2)
prob_1 <-
data.frame(
pop2014 = 1000000,
under18 = 20 / 100,
density = 1000,
black = 85 / 100,
hispanic = 5 / 100
)
predict(reg2, prob_1, type = "response")
b0 <- coef(reg2)[1]
b1 <- coef(reg2)[2]
b2 <- coef(reg2)[3]
b3 <- coef(reg2)[4]
b4 <- coef(reg2)[5]
b5 <- coef(reg2)[6]
pop2014_value <- 250000
under18_value <- 25 / 100
density_value <- 100
hispanic_value <- 10 / 100
black_threshold <- -(b0 + b1 * pop2014_value + b2 * under18_value + b3 * density_value + b5 * hispanic_value) / b4
print(black_threshold)
b0 <- -0.75
b1 <- 0.03
b2 <- 0.01
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(c(obs_1, obs_2, obs_3, obs_4))
likelihood = (obs_1 * obs_3) * ((1 - obs_2) * (1 - obs_4))
likelihood
b0 <- -1
b1 <- 2
b2 <- 4
p_x <- function(b0, b1, b2, hispanic, undergrad) {
return (1 / (1 + exp(b0 + b1 * hispanic + b2 * undergrad)))
}
obs_1 <- p_x(b0, b1, b2, 0.15, 0.20)
obs_2 <- p_x(b0, b1, b2, 0.25, 0.55)
obs_3 <- p_x(b0, b1, b2, 0.05, 0.05)
obs_4 <- p_x(b0, b1, b2, 0.75, 0.10)
print(c(obs_1, obs_2, obs_3, obs_4))
likelihood = (obs_1 * obs_3) * ((1 - obs_2) * (1 - obs_4))
likelihood
wine_data$cultivar <- as.factor(wine_data$cultivar)
table(wine_data$cultivar)/nrow(wine_data)
ggplot(wine_data, aes(x = alcohol)) +
geom_histogram(aes(fill = cultivar)) +
facet_grid(cols = vars(cultivar),
labeller = labeller(cultivar = label_both)) +
labs(x = "Alcohol", y = "Frequency") +
scale_x_continuous(breaks = breaks_pretty()) +
guides(fill = "none")
ggplot(wine_data, aes(x = acid)) +
geom_histogram(aes(fill = cultivar)) +
facet_grid(cols = vars(cultivar),
labeller = labeller(cultivar = label_both)) +
labs(x = "Acid", y = "Frequency") +
scale_x_continuous(breaks = breaks_pretty()) +
guides(fill = "none")
lda1 <- lda(cultivar ~ alcohol + acid, data = wine_data)
lda1
partimat(
cultivar ~ alcohol + acid,
data = wine_data,
method = "lda",
image.colors = c("lightgrey", "lightgreen", "white")
)
predict(lda1, data.frame(alcohol = 14, acid = 3))
qda <- qda(cultivar ~ alcohol + acid, data = wine_data)
qda
partimat(
cultivar ~ alcohol + acid,
data = wine_data,
method = "qda",
image.colors = c("lightgrey", "lightgreen", "white")
)
set.seed(420)
sample = sample.split(wine_data$cultivar, SplitRatio = 0.6)
train_set = subset(wine_data, sample == TRUE)
test_set = subset(wine_data, sample == FALSE)
lda_model <- lda(cultivar ~ alcohol + acid, data = train_set)
lda_predictions <-
predict(lda_model, newdata = test_set)$class
lda_accuracy <- sum(lda_predictions == test_set$cultivar) / length(lda_predictions)
print(glue("Accuracy of LDA: {round(lda_accuracy, 3)}"))
qda_model <- qda(cultivar ~ alcohol + acid, data = train_set)
qda_predictions <-
predict(qda_model, newdata = test_set)$class
qda_accuracy <- sum(qda_predictions == test_set$cultivar) / length(qda_predictions)
print(glue("Accuracy of QDA: {round(qda_accuracy, 3)}"))
